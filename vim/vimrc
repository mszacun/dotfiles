set t_Co=256 " 256 colors
" set UTF-8 encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8
" disable vi compatibility (emulation of old bugs)
set nocompatible
filetype off
set backspace=2         " make backspace working
" use indentation of previous line
set autoindent
" use intelligent indentation for C
set smartindent
" configure tabwidth and insert spaces instead of tabs
set tabstop=4        " tab width is 4 spaces
set shiftwidth=4     " indent also with 4 spaces
set expandtab        " expand tabs to spaces
set wrap
set ruler               " show the line number on the bar
set colorcolumn=80      " color column
" turn syntax highlighting on
syntax on
" search settings
set hlsearch
set incsearch
set ignorecase " ignore case when searching...
set smartcase " but change it when at lease on uppercase letter is given
" turn line numbers on
set relativenumber      " relative line numbering to simplyfy moving
set number              " normal line number
set showmatch           " show matching brackets
" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */
" split settings
set splitbelow
set splitright

set pastetoggle=<F2> " key to toggle paste mode
nmap <F3> :set invnumber invrelativenumber<CR>

set clipboard+=unnamed " enable clipboard register support

"options for GUI - remove all :)
set go-=m "remove menu bar
set go-=T "remove toolbar
set go-=r "remove right scroll bar
set go-=L "remove left scroll bar

set nobackup            " disable backup files
set noswapfile          " disable swap files

"so types.vim            " try to highlight user defined types

autocmd FileType Makefile expandtab off "tabs in Makefile

set autoread
set nobackup
set nowb
set undodir=~/.vim/undodir

" status bar stuff
set laststatus=2        " show status line all the time
let g:airline_theme = "base16"
let g:airline#extensions#tabline#enabled = 1

" some key bindings
nnoremap <F4> :bnext<cr>
nnoremap <S-q>! :bd<cr>
nnoremap <S-q> :bd<cr>

" move cursor by display line
nnoremap j gj
nnoremap k gk

" watch out for SHIFT key
:command Q q
:command W w
:command QA qall
:command Qa qall
:command Xa xall
:command XA xall

" enter removes highlight after search
nnoremap <CR> :noh<CR>

" disable arrow keys in Normal mode
map <up> <nop>
map <down> <nop>
map <left> :bprev<CR>
map <right> :bnext<CR>

" disable arrow keys in Insert mode
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" Use perl compiler for all *.pl and *.pm files.
autocmd BufNewFile,BufRead *.p? compiler perl

" remove trailing whitspaes on file save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun

autocmd FileType c,cpp,java,php,ruby,python,javascript,html autocmd BufWritePre <buffer> :call <SID>StripTrailingWhitespaces()

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" plugins
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-unimpaired'
Plugin 'bling/vim-airline'
Plugin 'kien/ctrlp.vim'
Bundle 'tomtom/tcomment_vim'
Bundle 'vim-scripts/ZoomWin'
Plugin 'chriskempson/base16-vim'
Bundle 'wellle/targets.vim'
Plugin 'sheerun/vim-polyglot'

" tmux integration
Plugin 'christoomey/vim-tmux-navigator'


" snipmate
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"

" user snippet repository
Bundle "honza/vim-snippets"

call vundle#end()            " required
filetype plugin indent on    " required

" colorscheme settings
let base16colorspace=256
colorscheme base16-default
set background=dark

" ctrlp tag fuzzy search
nnoremap <C-t> :CtrlPTag<CR>
