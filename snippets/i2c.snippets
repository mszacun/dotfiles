snippet icu
	from identt2check.users.factories import UserFactory
snippet icd
	from identt2check.documentocr.factories import POL_BO_02003_Full
snippet icbc
	from identt2check.verification.factories import BusinessCustomerFactory
snippet cd
	${2:self.}document = POL_BO_02003_Full(${1})
snippet ut
	from unittest import TestCase


	class ${1:`Mixedcase(Filename())`}(TestCase):
		def setUp(self):
			super().setUp()

		def test_${3}(self):
			${4}
snippet mt
	from identt2check.testing.testcases import TestCase


	class ${1:`Mixedcase(Filename())`}(TestCase):
		def setUp(self):
			super().setUp()

		def test_${3}(self):
			${4}
snippet amt
	from identt2check.testing.testcases import APITestCase


	class ${1:`Mixedcase(Filename())`}(APITestCase):
		def setUp(self):
			super().setUp()

		def test_${3}(self):
			${4}

snippet admin
	from identt2check.admin_utils import Identt2checkAdmin


	class ${1:Foo}Admin(Identt2checkAdmin):
		list_display = ('${2}',)
		list_filter = (${3})
		search_fields = (${4})
	admin.site.register($1, $1Admin)
snippet glog
	import structlog
	logger = structlog.getLogger()
snippet le
	logger.error(${0:msg})
snippet lg
	logger.debug(${0:msg})
snippet lw
	logger.warning(${0:msg})
snippet lc
	logger.critical(${0:msg})
snippet li
	logger.info(${0:msg})
snippet lex
	logger.exception('${0:msg}', exception_handled=True)
snippet inline
	from identt2check.admin_utils import Identt2checkAdmin, Identt2checkStackedInline


	class ${1:Foo}Inline(Identt2checkStackedInline):
		model = models.$1
		extra = 0
snippet condition
	class ${1:Name}(Condition):
		def is_satisfied(self, *args, **kwargs):
			${2}
